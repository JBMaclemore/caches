var TokenABIType1=[{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenOfOwnerByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"uri",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}],TokenABIType2=[{inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"uint256",name:"_id",type:"uint256"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenOfOwnerByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"uri",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];async function checkAndShowNft(b,c,d,g){console.log(b,c);let e=new Web3(window.ethereum);try{await e.eth.getAccounts()}catch(f){console.error("error ",f.message)}let a=await checkBalance(TokenABIType1,b,c,d);return(a<0&&(a=await checkBalance(TokenABIType2,b,c,d)),a<0)?-1:a}function getWeb3ContractObject(b,c,d){let e=new Web3(window.ethereum),a=new e.eth.Contract(b,c);return"Ethereum"==d?a.setProvider("https://cloudflare-eth.com/"):a.setProvider("https://polygon-rpc.com/"),a}async function checkBalance(e,c,f,g){let a=getWeb3ContractObject(e,f,g);a.defaultAccount=c,console.log("contracts",a);let b,d;try{return b=await a.methods.balanceOf(c).call(),b=Number(b)}catch(h){console.log(h)}try{d=await a.methods.tokenOfOwnerByIndex(c,0).call()}catch(i){return console.log(i),-1}try{b=await a.methods.balanceOf(c,d).call()}catch(j){return console.log(j),-1}return Number(b)}async function checkAllNfts(d,e){console.log(e,d);let a=[];for(let[i,b]of Object.entries(e)){let j=i,k=b.blockchain,f=b.contractAddress,l=b.errorUrl,g=0;for(let c=0;c<f.length;c++){let h=await checkAndShowNft(d,f[c],k);"number"==typeof h&&(g+=h)}(obj={})[j]={balance:g,errorUrl:l},console.log("obj ",obj),a.push(obj)}return console.log("userAllowedPageAccess: ",JSON.stringify(a)),a}async function checkAllContracts(c,a){for(console.log(a),mapping_count=void 0!==a.role_mapping_count?parseInt(a.role_mapping_count):0,contracts=[],i=1;i<=mapping_count;i++)for(j in mappedcontract=void 0!==a["_mapping_key_"+i]?a["_mapping_key_"+i]:"",console.log(mappedcontract),mappedcontract_arr=mappedcontract.split(","),console.log(mappedcontract_arr),mappedcontract_arr){contractAddress=mappedcontract_arr[j],console.log(contractAddress);let b=await checkAndShowNft(c,contractAddress,blockchain="Ethereum");"number"==typeof b&&0<b&&contracts.push(contractAddress)}return console.log(contracts),contracts}